


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000 00000000 
                       n       EQU              0
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000         ; Lab 7 requirement is for at least one local variable o
                       n the stack with symbolic binding
   29 00000000         LCD_OutDec
   30 00000000         ;push all the registers
   31 00000000         ;push each number as it comes up
   32 00000000         ;the n value will be frame pointed to for both computati
                       on and to point where the stack began
   33 00000000 B501            PUSH             {R0, LR}    ;n is initialized t
                                                            o the input variabl
                                                            e. size is just all
                                                            ocated
   34 00000002 46EC            MOV              R12, SP     ;R12 is now a frame
                                                             pointer
   35 00000004 F04F 020A       MOV              R2, #10     ;this is for decima
                                                            l modulus math
   36 00000008         
   37 00000008 2800            CMP              R0, #0      ;handle the zero ed
                                                            gecase
   38 0000000A D106            BNE              decbegin
   39 0000000C F100 0030       ADD              R0, R0, #0x30 ;this will just p
                                                            rint zero and end t
                                                            he printing
   40 00000010 F7FF FFFE       BL               ST7735_OutChar
   41 00000014 E8BD 4001       POP              {R0, LR}    ;deallocates everyt



ARM Macro Assembler    Page 2 


                                                            hing
   42 00000018 4770            BX               LR
   43 0000001A         decbegin
   44 0000001A F8DC 0000       LDR              R0, [R12, #n] ;load from the me
                                                            mory location
   45 0000001E 2800            CMP              R0, #0
   46 00000020 D00D            BEQ              decprinter  ;if its zero, we ar
                                                            e done
   47 00000022         
   48 00000022 FBB0 F1F2       UDIV             R1, R0, R2  ;divide first, and 
                                                            integer division wi
                                                            ll roun down
   49 00000026 FB01 F102       MUL              R1, R1, R2  ;multiply. this num
                                                            ber will be less th
                                                            an or equal to R0
   50 0000002A EBA0 0101       SUB              R1, R0, R1  ;subtract R1 from R
                                                            0 for the remainder
                                                            . that mod is store
                                                            d to R1
   51 0000002E F101 0130       ADD              R1, R1, #0x30 ;add the mod to g
                                                            et an ascii charact
                                                            er
   52 00000032 B406            PUSH             {R1, R2}    ;push onto the stac
                                                            k for easy navigati
                                                            on. R2 is pushed fo
                                                            r alignment
   53 00000034         
   54 00000034 FBB0 F0F2       UDIV             R0, R0, R2  ;divide n by 10 and
                                                             store it into its 
                                                            memory spot. this r
                                                            eadies up the next 
                                                            digit
   55 00000038 F8CC 0000       STR              R0, [R12, #n]
   56 0000003C E7ED            B                decbegin
   57 0000003E         
   58 0000003E         decprinter
   59 0000003E 45EC            CMP              R12, SP     ;if the frame point
                                                            er is equal to the 
                                                            stack pointer, all 
                                                            the digits were pus
                                                            hed and printed
   60 00000040 D003            BEQ              decexit
   61 00000042         ;the top of the stack has the most significant digit
   62 00000042 BC05            POP              {R0, R2}    ;pushing to E2 also
                                                             for alignment
   63 00000044 F7FF FFFE       BL               ST7735_OutChar
   64 00000048 E7F9            B                decprinter
   65 0000004A         
   66 0000004A         decexit
   67 0000004A E8BD 4001       POP              {R0, LR}    ;pop the variable a
                                                            nd the LR, which wa
                                                            s changed when goin
                                                            g to outchar
   68 0000004E 4770            BX               LR
   69 00000050         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   70 00000050         
   71 00000050         ; -----------------------LCD _OutFix--------------------
                       --
   72 00000050         ; Output characters to LCD display in fixed-point format



ARM Macro Assembler    Page 3 


                       
   73 00000050         ; unsigned decimal, resolution 0.01, range 0.00 to 9.99
   74 00000050         ; Inputs:  R0 is an unsigned 32-bit number
   75 00000050         ; Outputs: none
   76 00000050         ; E.g., R0=0,    then output "0.00 "
   77 00000050         ;       R0=3,    then output "0.003 "
   78 00000050         ;       R0=89,   then output "0.89 "
   79 00000050         ;       R0=123,  then output "1.23 "
   80 00000050         ;       R0=999,  then output "9.99 "
   81 00000050         ;       R0>999,  then output "*.** "
   82 00000050         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   83 00000050         ; Lab 7 requirement is for at least one local variable o
                       n the stack with symbolic binding
   84 00000050         LCD_OutFix
   85 00000050         ;push all the registers
   86 00000050         ;push each number as it comes up
   87 00000050         ;the n value will be frame pointed to for both computati
                       on and to point where the stack began
   88 00000050 B501            PUSH             {R0, LR}    ;n is initialized t
                                                            o the input variabl
                                                            e
   89 00000052 46EC            MOV              R12, SP     ;R12 is now a frame
                                                             pointer
   90 00000054 F44F 727A       MOV              R2, #1000   ;this will be to ma
                                                            ke sure the numbers
                                                             not out of bounds
   91 00000058 F04F 0303       MOV              R3, #3      ;a counter for chec
                                                            king where the deci
                                                            mal should go
   92 0000005C         
   93 0000005C 2800            CMP              R0, #0      ;handle the zero ed
                                                            gecase
   94 0000005E D112            BNE              checkbig
   95 00000060 F100 0030       ADD              R0, R0, #0x30 ;this will just p
                                                            rint 0.00 and end t
                                                            he printing
   96 00000064 F7FF FFFE       BL               ST7735_OutChar
   97 00000068 F04F 002E       MOV              R0, #0x2E
   98 0000006C F7FF FFFE       BL               ST7735_OutChar
   99 00000070 F04F 0030       MOV              R0, #0x30
  100 00000074 F7FF FFFE       BL               ST7735_OutChar
  101 00000078 F04F 0030       MOV              R0, #0x30
  102 0000007C F7FF FFFE       BL               ST7735_OutChar
  103 00000080 E8BD 4001       POP              {R0, LR}    ;deallocates everyt
                                                            hing
  104 00000084 4770            BX               LR
  105 00000086         
  106 00000086         checkbig
  107 00000086 4290            CMP              R0, R2      ;handle the max val
                                                            ue edgecase
  108 00000088 D312            BLO              fixbegin
  109 0000008A F04F 002A       MOV              R0, #0x2A   ;this will just pri
                                                            nt *.** and end the
                                                             printing
  110 0000008E F7FF FFFE       BL               ST7735_OutChar
  111 00000092 F04F 002E       MOV              R0, #0x2E
  112 00000096 F7FF FFFE       BL               ST7735_OutChar
  113 0000009A F04F 002A       MOV              R0, #0x2A



ARM Macro Assembler    Page 4 


  114 0000009E F7FF FFFE       BL               ST7735_OutChar
  115 000000A2 F04F 002A       MOV              R0, #0x2A
  116 000000A6 F7FF FFFE       BL               ST7735_OutChar
  117 000000AA E8BD 4001       POP              {R0, LR}    ;deallocates everyt
                                                            hing
  118 000000AE 4770            BX               LR
  119 000000B0         
  120 000000B0         
  121 000000B0         fixbegin
  122 000000B0 F04F 020A       MOV              R2, #10     ;for decimal modulu
                                                            s
  123 000000B4 F8DC 0000       LDR              R0, [R12, #n]
  124 000000B8 2800            CMP              R0, #0
  125 000000BA D00F            BEQ              fixfiller
  126 000000BC         
  127 000000BC FBB0 F1F2       UDIV             R1, R0, R2  ;divide first, and 
                                                            integer division wi
                                                            ll roun down
  128 000000C0 FB01 F102       MUL              R1, R1, R2  ;multiply. this num
                                                            ber will be less th
                                                            an or equal to R0
  129 000000C4 EBA0 0101       SUB              R1, R0, R1  ;subtract R1 from R
                                                            0 for the remainder
                                                            . that mod is store
                                                            d to R1
  130 000000C8 F101 0130       ADD              R1, R1, #0x30 ;add the mod to g
                                                            et an ascii charact
                                                            er
  131 000000CC B406            PUSH             {R1, R2}    ;push onto the stac
                                                            k for easy navigati
                                                            on. R2 is pushed fo
                                                            r alignment
  132 000000CE         
  133 000000CE FBB0 F0F2       UDIV             R0, R0, R2  ;divide n by 10 and
                                                             store it into its 
                                                            memory spot
  134 000000D2 F8CC 0000       STR              R0, [R12, #n]
  135 000000D6 F1A3 0301       SUB              R3, R3, #1
  136 000000DA E7E9            B                fixbegin
  137 000000DC         
  138 000000DC         fixfiller                            ;pads the rest of t
                                                            he number with zero
                                                            es, since its of a 
                                                            fixed length
  139 000000DC F04F 0130       MOV              R1, #0x30
  140 000000E0 2B00            CMP              R3, #0      ;use the counter to
                                                             see how many more 
                                                            zeroes need to be a
                                                            dded
  141 000000E2 D003            BEQ              fixprinter
  142 000000E4 B40A            PUSH             {R1, R3}
  143 000000E6 F1A3 0301       SUB              R3, R3, #1
  144 000000EA E7F7            B                fixfiller
  145 000000EC         
  146 000000EC         fixprinter
  147 000000EC 45EC            CMP              R12, SP
  148 000000EE D00B            BEQ              fixexit
  149 000000F0         ;the top of the stack has the most significant digit
  150 000000F0 BC05            POP              {R0, R2}



ARM Macro Assembler    Page 5 


  151 000000F2 F7FF FFFE       BL               ST7735_OutChar
  152 000000F6 F1AC 0210       SUB              R2, R12, #16
  153 000000FA 456A            CMP              R2, SP      ;if the top charact
                                                            er was just printed
                                                            , be sure to add a 
                                                            decimal point
  154 000000FC D103            BNE              dotskip
  155 000000FE         
  156 000000FE F04F 002E       MOV              R0, #0x2E
  157 00000102 F7FF FFFE       BL               ST7735_OutChar
  158 00000106         
  159 00000106         dotskip
  160 00000106 E7F1            B                fixprinter
  161 00000108         
  162 00000108         fixexit
  163 00000108 E8BD 4001       POP              {R0, LR}
  164 0000010C 4770            BX               LR
  165 0000010E         
  166 0000010E 00 00           ALIGN
  167 00000110         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  168 00000110         
  169 00000110                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  170 00000110                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab7 -IC:\Users\kenor\AppData\Local
\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\kenor\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" 
--predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 529" --pred
efine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\print.lst Print
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 29 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000050

Symbol: LCD_OutFix
   Definitions
      At line 84 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
checkbig 00000086

Symbol: checkbig
   Definitions
      At line 106 in file Print.s
   Uses
      At line 94 in file Print.s
Comment: checkbig used once
decbegin 0000001A

Symbol: decbegin
   Definitions
      At line 43 in file Print.s
   Uses
      At line 38 in file Print.s
      At line 56 in file Print.s

decexit 0000004A

Symbol: decexit
   Definitions
      At line 66 in file Print.s
   Uses
      At line 60 in file Print.s
Comment: decexit used once
decprinter 0000003E

Symbol: decprinter
   Definitions
      At line 58 in file Print.s
   Uses
      At line 46 in file Print.s
      At line 64 in file Print.s

dotskip 00000106



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: dotskip
   Definitions
      At line 159 in file Print.s
   Uses
      At line 154 in file Print.s
Comment: dotskip used once
fixbegin 000000B0

Symbol: fixbegin
   Definitions
      At line 121 in file Print.s
   Uses
      At line 108 in file Print.s
      At line 136 in file Print.s

fixexit 00000108

Symbol: fixexit
   Definitions
      At line 162 in file Print.s
   Uses
      At line 148 in file Print.s
Comment: fixexit used once
fixfiller 000000DC

Symbol: fixfiller
   Definitions
      At line 138 in file Print.s
   Uses
      At line 125 in file Print.s
      At line 144 in file Print.s

fixprinter 000000EC

Symbol: fixprinter
   Definitions
      At line 146 in file Print.s
   Uses
      At line 141 in file Print.s
      At line 160 in file Print.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

n 00000000

Symbol: n
   Definitions
      At line 21 in file Print.s
   Uses
      At line 44 in file Print.s
      At line 55 in file Print.s
      At line 123 in file Print.s
      At line 134 in file Print.s

1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 40 in file Print.s
      At line 63 in file Print.s
      At line 96 in file Print.s
      At line 98 in file Print.s
      At line 100 in file Print.s
      At line 102 in file Print.s
      At line 110 in file Print.s
      At line 112 in file Print.s
      At line 114 in file Print.s
      At line 116 in file Print.s
      At line 151 in file Print.s
      At line 157 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
350 symbols in table
