


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Evan Varghese and Ken Nguyen
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 1/17/2020
    5 00000000         ; You are given a simple stepper motor software system w
                       ith one input and
    6 00000000         ; four outputs. This program runs, but you are asked to 
                       add minimally intrusive
    7 00000000         ; debugging instruments to verify it is running properly
                       . 
    8 00000000         ; The system outputs in one of three modes:
    9 00000000         ; 1) cycles through 10,6,5,9,... at a constant rate
   10 00000000         ; 2) cycles through 5,6,10,9,... at a constant rate
   11 00000000         ; 3) does not change the output, but still outputs at a 
                       constant rate
   12 00000000         ; When PA4 goes high and low again, the system cycles th
                       rough these modes
   13 00000000         ; The output rate will be different on the simulator ver
                       sus the real board
   14 00000000         ;   Insert debugging instruments which gather data (stat
                       e and timing)
   15 00000000         ;   to verify that the system is functioning as expected
                       .
   16 00000000         ; Hardware connections (External: One button and four ou
                       tputs to stepper motor)
   17 00000000         ;  PA4 is Button input  (1 means pressed, 0 means not pr
                       essed)
   18 00000000         ;  PE3-0 are stepper motor outputs 
   19 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   20 00000000         ; Instrumentation data to be gathered is as follows:
   21 00000000         ; After every output to Port E, collect one state and ti
                       me entry. 
   22 00000000         ; The state information is the 5 bits on Port A bit 4 an
                       d Port E PE3-0
   23 00000000         ;   place one 8-bit entry in your Data Buffer  
   24 00000000         ; The time information is the 24-bit time difference bet
                       ween this output and the previous (in 12.5ns units)
   25 00000000         ;   place one 32-bit entry in the Time Buffer
   26 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   27 00000000         ;    you must handle the roll over as Current goes 3,2,1
                       ,0,0x00FFFFFF,0xFFFFFE,
   28 00000000         ; Note: The size of both buffers is 100 entries. Once yo
                       u fill these
   29 00000000         ;       entries you should stop collecting data
   30 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   31 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   32 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   33 00000000         
   34 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   35 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   36 00000000 400043FC 



ARM Macro Assembler    Page 2 


                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   37 00000000 40004400 
                       GPIO_PORTA_DIR_R
                               EQU              0x40004400
   38 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   39 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   40 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   41 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   42 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   43 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   44 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   45 00000000         ; RAM Area
   46 00000000                 AREA             DATA, ALIGN=2
   47 00000000 00 00 00 
              00       Index   SPACE            4           ; index into Steppe
                                                            r table 0,1,2,3
   48 00000004 00 00 00 
              00       Direction
                               SPACE            4           ; -1 for CCW, 0 for
                                                             stop 1 for CW
   49 00000008         
   50 00000008         ;place your debug variables in RAM here
   51 00000008         
   52 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       DataBuf SPACE            100         ; uint8_t DataBuf[1
                                                            00];
   53 0000006C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TimeBuf SPACE            400         ; uint32_t TimeBuf[
                                                            100];
   54 000001FC         
   55 000001FC 00 00 00 
              00       DataPt  SPACE            4           ; pointer to DataBu
                                                            f array elements
   56 00000200 00 00 00 
              00       TimePt  SPACE            4           ; pointer to TimeBu
                                                            f array elements
   57 00000204         
   58 00000204 00 00 00 
              00       lTime   SPACE            4           ; the last time rea
                                                            d by the debug cycl
                                                            e. initialize to 0x
                                                            00FFFFFF
   59 00000208         
   60 00000208         ; ROM Area
   61 00000208                 IMPORT           TExaS_Init
   62 00000208                 IMPORT           SysTick_Init
   63 00000208         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   64 00000208                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   65 00000000                 THUMB
   66 00000000 05 06 0A 
              09       Stepper DCB              5,6,10,9
   67 00000004                 EXPORT           Start
   68 00000004         
   69 00000004         Start
   70 00000004         ; TExaS_Init sets bus clock at 80 MHz



ARM Macro Assembler    Page 6 


   71 00000004         ; PA4, PE3-PE0 out logic analyzer to TExasDisplay
   72 00000004 4869            LDR              R0,=SendDataToLogicAnalyzer
   73 00000006 F040 0001       ORR              R0,R0,#1
   74 0000000A F7FF FFFE       BL               TExaS_Init  ; logic analyzer, 8
                                                            0 MHz
   75 0000000E         ;place your initializations here
   76 0000000E F000 F826       BL               Stepper_Init ; initialize stepp
                                                            er motor
   77 00000012 F000 F83E       BL               Switch_Init ; initialize switch
                                                             input
   78 00000016 F000 F84E       BL               Heartbeat_Init
   79 0000001A         ;**********************
   80 0000001A F000 F871       BL               Debug_Init  ;(you write this)
   81 0000001E         ;**********************
   82 0000001E B662            CPSIE            I           ; TExaS logic analy
                                                            zer runs on interru
                                                            pts
   83 00000020 F04F 0500       MOV              R5,#0       ; last PA4
   84 00000024         loop
   85 00000024 4962            LDR              R1, =GPIO_PORTF_DATA_R
   86 00000026 780A            LDRB             R2, [R1]
   87 00000028 F082 0204       EOR              R2, #0X04
   88 0000002C 700A            STRB             R2, [R1]    ; toggle heartbeat
   89 0000002E         
   90 0000002E 4961            LDR              R1,=GPIO_PORTA_DATA_R
   91 00000030 680C            LDR              R4,[R1]     ;current value of s
                                                            witch
   92 00000032 F004 0410       AND              R4,R4,#0x10 ; select just bit 4
                                                            
   93 00000036 2C00            CMP              R4,#0
   94 00000038 D00A            BEQ              no          ; skip if not pushe
                                                            d
   95 0000003A 2D00            CMP              R5,#0
   96 0000003C D108            BNE              no          ; skip if pushed la
                                                            st time
   97 0000003E         ; this time yes, last time no
   98 0000003E 495E            LDR              R1,=Direction
   99 00000040 6808            LDR              R0,[R1]     ; current direction
                                                            
  100 00000042 F100 0001       ADD              R0,R0,#1    ;-1,0,1 to 0,1,2
  101 00000046 2802            CMP              R0,#2
  102 00000048 D101            BNE              ok
  103 0000004A F04F 30FF       MOV              R0,#-1      ; cycles through va
                                                            lues -1,0,1
  104 0000004E 6008    ok      STR              R0,[R1]     ; Direction=0 (CW) 
                                                             
  105 00000050 4625    no      MOV              R5,R4       ; setup for next ti
                                                            me
  106 00000052 F000 F842       BL               Stepper_Step
  107 00000056 4859            LDR              R0,=1600000
  108 00000058 F000 F84F       BL               Wait        ; time delay fixed 
                                                            but not accurate   
                                                            
  109 0000005C E7E2            B                loop
  110 0000005E         ;Initialize stepper motor interface
  111 0000005E         Stepper_Init
  112 0000005E F04F 0001       MOV              R0,#1
  113 00000062 4955            LDR              R1,=Direction
  114 00000064 6008            STR              R0,[R1]     ; Direction=0 (CW)



ARM Macro Assembler    Page 7 


  115 00000066 F04F 0000       MOV              R0,#0
  116 0000006A 4955            LDR              R1,=Index
  117 0000006C 6008            STR              R0,[R1]     ; Index=0
  118 0000006E         ; activate clock for Port E
  119 0000006E 4955            LDR              R1, =SYSCTL_RCGCGPIO_R
  120 00000070 6808            LDR              R0, [R1]
  121 00000072 F040 0010       ORR              R0, R0, #0x10 ; Clock for E
  122 00000076 6008            STR              R0, [R1]
  123 00000078 BF00            NOP
  124 0000007A BF00            NOP                          ; allow time to fin
                                                            ish activating
  125 0000007C         ; set direction register
  126 0000007C 4952            LDR              R1, =GPIO_PORTE_DIR_R
  127 0000007E 6808            LDR              R0, [R1]
  128 00000080 F040 000F       ORR              R0, R0, #0x0F 
                                                            ; Output on PE0-PE3
                                                            
  129 00000084 6008            STR              R0, [R1]
  130 00000086         ; enable digital port
  131 00000086 4951            LDR              R1, =GPIO_PORTE_DEN_R
  132 00000088 6808            LDR              R0, [R1]
  133 0000008A F040 000F       ORR              R0, R0, #0x0F ; enable PE3-0
  134 0000008E 6008            STR              R0, [R1]
  135 00000090 4770            BX               LR
  136 00000092         
  137 00000092         ;Initialize switch interface
  138 00000092         Switch_Init
  139 00000092         ; activate clock for Port A
  140 00000092 494C            LDR              R1, =SYSCTL_RCGCGPIO_R
  141 00000094 6808            LDR              R0, [R1]
  142 00000096 F040 0001       ORR              R0, R0, #0x01 ; Clock for A
  143 0000009A 6008            STR              R0, [R1]
  144 0000009C BF00            NOP
  145 0000009E BF00            NOP                          ; allow time to fin
                                                            ish activating
  146 000000A0         ; set direction register
  147 000000A0 494B            LDR              R1, =GPIO_PORTA_DIR_R
  148 000000A2 6808            LDR              R0, [R1]
  149 000000A4 F020 0010       BIC              R0, R0, #0x10 ; Input on PA4
  150 000000A8 6008            STR              R0, [R1]
  151 000000AA         ; 5) enable digital port
  152 000000AA 494A            LDR              R1, =GPIO_PORTA_DEN_R
  153 000000AC 6808            LDR              R0, [R1]
  154 000000AE F040 0010       ORR              R0, R0, #0x10 ; enable PA4
  155 000000B2 6008            STR              R0, [R1]
  156 000000B4 4770            BX               LR
  157 000000B6         
  158 000000B6         ;Initialize Heartbeat LED
  159 000000B6         Heartbeat_Init
  160 000000B6 4943            LDR              R1, =SYSCTL_RCGCGPIO_R
  161 000000B8 6808            LDR              R0, [R1]
  162 000000BA F040 0020       ORR              R0, R0, #0x20 ; Clock for F
  163 000000BE 6008            STR              R0, [R1]
  164 000000C0 BF00            NOP
  165 000000C2 BF00            NOP                          ; allow time to fin
                                                            ish activating
  166 000000C4         ; set direction register
  167 000000C4 4944            LDR              R1, =GPIO_PORTF_DIR_R
  168 000000C6 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 8 


  169 000000C8 F040 0004       ORR              R0, R0, #0x04 ; Output on PF2
  170 000000CC 6008            STR              R0, [R1]
  171 000000CE         ; 5) enable digital port
  172 000000CE 4943            LDR              R1, =GPIO_PORTF_DEN_R
  173 000000D0 6808            LDR              R0, [R1]
  174 000000D2 F040 0004       ORR              R0, R0, #0x04 ; enable PF2
  175 000000D6 6008            STR              R0, [R1]
  176 000000D8 4770            BX               LR
  177 000000DA         ; Step the motor clockwise
  178 000000DA         ; Direction determines the rotational direction
  179 000000DA         ; Input: None
  180 000000DA         ; Output: None
  181 000000DA         Stepper_Step
  182 000000DA B510            PUSH             {R4,LR}
  183 000000DC 4938            LDR              R1,=Index
  184 000000DE 680A            LDR              R2,[R1]     ; old Index
  185 000000E0 4B35            LDR              R3,=Direction
  186 000000E2 6818            LDR              R0,[R3]     ; -1 for CCW, 0 for
                                                             stop 1 for CW
  187 000000E4 4402            ADD              R2,R2,R0
  188 000000E6 F002 0203       AND              R2,R2,#3    ; 0,1,2,3,0,1,2,...
                                                            
  189 000000EA 600A            STR              R2,[R1]     ; new Index
  190 000000EC 4B3C            LDR              R3,=Stepper ; table
  191 000000EE 5CD0            LDRB             R0,[R2,R3]  ; next output: 5,6,
                                                            10,9,5,6,10,...
  192 000000F0 493C            LDR              R1,=GPIO_PORTE_DATA_R 
                                                            ; change PE3-PE0
  193 000000F2 6008            STR              R0,[R1]
  194 000000F4 F000 F824       BL               Debug_Capture
  195 000000F8 BD10            POP              {R4,PC}
  196 000000FA         ; inaccurate and inefficient time delay
  197 000000FA         Wait
  198 000000FA 1E40            SUBS             R0,R0,#1    ; outer loop
  199 000000FC D1FD            BNE              Wait
  200 000000FE 4770            BX               LR
  201 00000100         
  202 00000100         Debug_Init
  203 00000100 B51F            PUSH             {R0-R4,LR}  ;AAPCS compliance 
  204 00000102         
  205 00000102 4839            LDR              R0, =DataBuf
  206 00000104 F04F 32FF       MOV              R2, #-1
  207 00000108 F04F 0364       MOV              R3, #100
  208 0000010C         DataInitLoop
  209 0000010C 7002            STRB             R2, [R0]    ;overwrites every v
                                                            alue in DataBuf wit
                                                            h -1
  210 0000010E F100 0001       ADD              R0, #1
  211 00000112 3B01            SUBS             R3, #1
  212 00000114 D1FA            BNE              DataInitLoop
  213 00000116         
  214 00000116 4935            LDR              R1, =TimeBuf ;does the same to 
                                                            TimeBuf
  215 00000118 F04F 0364       MOV              R3, #100
  216 0000011C         TimeInitLoop
  217 0000011C 600A            STR              R2, [R1]
  218 0000011E F101 0104       ADD              R1, #4      ;since this array i
                                                            s 4 bit, the pointe
                                                            r must be increased



ARM Macro Assembler    Page 9 


                                                             by 4
  219 00000122 3B01            SUBS             R3, #1
  220 00000124 D1FA            BNE              TimeInitLoop
  221 00000126         
  222 00000126 4830            LDR              R0, =DataBuf ;stores the initia
                                                            l pointers to the p
                                                            roper variables
  223 00000128 4931            LDR              R1, =DataPt
  224 0000012A 6008            STR              R0, [R1]
  225 0000012C 482F            LDR              R0, =TimeBuf
  226 0000012E 4931            LDR              R1, =TimePt
  227 00000130 6008            STR              R0, [R1]
  228 00000132         
  229 00000132 F7FF FFFE       BL               SysTick_Init
  230 00000136         
  231 00000136 4830            LDR              R0, =lTime
  232 00000138 F06F 417F       LDR              R1, =0x00FFFFFF
  233 0000013C 6001            STR              R1, [R0]
  234 0000013E         
  235 0000013E BD1F            POP              {R0-R4,PC}  ;popping to LR to P
                                                            C returns to the or
                                                            iginal main.s code
  236 00000140         
  237 00000140         
  238 00000140         ;Debug capture      
  239 00000140         Debug_Capture
  240 00000140 B57F            PUSH             {R0-R6,LR}
  241 00000142 4B2B            LDR              R3, =DataPt ;check if buffers a
                                                            re full
  242 00000144 681B            LDR              R3, [R3]
  243 00000146 4C28            LDR              R4, =DataBuf
  244 00000148 F104 0464       ADD              R4, #100
  245 0000014C 42A3            CMP              R3, R4
  246 0000014E DA21            BGE              leave
  247 00000150         
  248 00000150         
  249 00000150         
  250 00000150         
  251 00000150 482A            LDR              R0, =NVIC_ST_CURRENT_R
  252 00000152 6801            LDR              R1, [R0]
  253 00000154 4D28            LDR              R5, =lTime
  254 00000156 682D            LDR              R5, [R5]
  255 00000158 EBA5 0601       SUB              R6, R5, R1  ;subtract current t
                                                            ime from last time 
                                                            since it counts dow
                                                            n
  256 0000015C F026 467F       AND              R6, #0X00FFFFFF
  257 00000160 4D25            LDR              R5, =lTime
  258 00000162 6029            STR              R1, [R5]    ;make last time the
                                                             current time
  259 00000164         
  260 00000164 4823            LDR              R0, =TimePt ;store the time int
                                                            o TimePt
  261 00000166 6800            LDR              R0, [R0]
  262 00000168 6006            STR              R6, [R0]
  263 0000016A         
  264 0000016A 4922            LDR              R1, =TimePt
  265 0000016C F100 0004       ADD              R0, #0x4    ;increment TimePt
  266 00000170 6008            STR              R0, [R1]



ARM Macro Assembler    Page 10 


  267 00000172         
  268 00000172         
  269 00000172         
  270 00000172         
  271 00000172 4B10            LDR              R3, =GPIO_PORTA_DATA_R ;check p
                                                            orts A and E
  272 00000174 4C1B            LDR              R4, =GPIO_PORTE_DATA_R
  273 00000176         
  274 00000176 681B            LDR              R3, [R3]
  275 00000178 6824            LDR              R4, [R4]
  276 0000017A         
  277 0000017A F003 0310       AND              R3, #0x10
  278 0000017E F004 040F       AND              R4, #0xF
  279 00000182 EA43 0204       ORR              R2, R3, R4  ;R2 has the masked 
                                                            and combined values
                                                             of everything
  280 00000186         
  281 00000186 4B1A            LDR              R3, =DataPt ;store that value i
                                                            nto DataBuf
  282 00000188 681B            LDR              R3, [R3]    ;take the address i
                                                            n DataPt
  283 0000018A 701A            STRB             R2, [R3]
  284 0000018C         
  285 0000018C 4C18            LDR              R4, =DataPt
  286 0000018E F103 0301       ADD              R3, #0x1    ;increment DataPt
  287 00000192 6023            STR              R3, [R4]    ;this all takes 825
                                                             ns. the full progr
                                                            am takes about 80 m
                                                            illion nanoseconds 
                                                            to run, so the debu
                                                            g routine has an in
                                                            trusiveness of .001
                                                            %
  288 00000194         
  289 00000194         leave
  290 00000194 BD7F            POP              {R0-R6,PC}
  291 00000196         
  292 00000196         ; edit the following only if you need to move pins from 
                       PA4, PE3-0      
  293 00000196         ; logic analyzer on the real board
  294 00000196 40004040 
                       PA4     equ              0x40004040  ; bit-specific addr
                                                            essing
  295 00000196 4002403C 
                       PE30    equ              0x4002403C  ; bit-specific addr
                                                            essing
  296 00000196 4000C000 
                       UART0_DR_R
                               equ              0x4000C000  ;write to this to s
                                                            end data
  297 00000196         SendDataToLogicAnalyzer
  298 00000196 491A            LDR              R1,=PA4
  299 00000198 6809            LDR              R1,[R1]     ; read PA4
  300 0000019A 481A            LDR              R0,=PE30    ; read PE3-PE0
  301 0000019C 6800            LDR              R0,[R0]
  302 0000019E EA40 0001       ORR              R0,R0,R1    ;combine into one 5
                                                            -bit value
  303 000001A2 F040 0080       ORR              R0,R0,#0x80 ;bit7=1 means digit
                                                            al data



ARM Macro Assembler    Page 11 


  304 000001A6 4918            LDR              R1,=UART0_DR_R
  305 000001A8 6008            STR              R0,[R1]     ; send data at 10 k
                                                            Hz
  306 000001AA 4770            BX               LR
  307 000001AC         
  308 000001AC         
  309 000001AC                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  310 000001AC                 END                          ; end of file
              00000000 
              400253FC 
              400043FC 
              00000000 
              00186A00 
              00000000 
              400FE608 
              40024400 
              4002451C 
              40004400 
              4000451C 
              40025400 
              4002551C 
              00000000 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              40004040 
              4002403C 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab4 -IC:\Users\kenor\AppData\Local\A
rm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\kenor\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: DATA unused
DataBuf 00000008

Symbol: DataBuf
   Definitions
      At line 52 in file main.s
   Uses
      At line 205 in file main.s
      At line 222 in file main.s
      At line 243 in file main.s

DataPt 000001FC

Symbol: DataPt
   Definitions
      At line 55 in file main.s
   Uses
      At line 223 in file main.s
      At line 241 in file main.s
      At line 281 in file main.s
      At line 285 in file main.s

Direction 00000004

Symbol: Direction
   Definitions
      At line 48 in file main.s
   Uses
      At line 98 in file main.s
      At line 113 in file main.s
      At line 185 in file main.s

Index 00000000

Symbol: Index
   Definitions
      At line 47 in file main.s
   Uses
      At line 116 in file main.s
      At line 183 in file main.s

TimeBuf 0000006C

Symbol: TimeBuf
   Definitions
      At line 53 in file main.s
   Uses
      At line 214 in file main.s
      At line 225 in file main.s

TimePt 00000200




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: TimePt
   Definitions
      At line 56 in file main.s
   Uses
      At line 226 in file main.s
      At line 260 in file main.s
      At line 264 in file main.s

lTime 00000204

Symbol: lTime
   Definitions
      At line 58 in file main.s
   Uses
      At line 231 in file main.s
      At line 253 in file main.s
      At line 257 in file main.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 64 in file main.s
   Uses
      None
Comment: .text unused
DataInitLoop 0000010C

Symbol: DataInitLoop
   Definitions
      At line 208 in file main.s
   Uses
      At line 212 in file main.s
Comment: DataInitLoop used once
Debug_Capture 00000140

Symbol: Debug_Capture
   Definitions
      At line 239 in file main.s
   Uses
      At line 194 in file main.s
Comment: Debug_Capture used once
Debug_Init 00000100

Symbol: Debug_Init
   Definitions
      At line 202 in file main.s
   Uses
      At line 80 in file main.s
Comment: Debug_Init used once
Heartbeat_Init 000000B6

Symbol: Heartbeat_Init
   Definitions
      At line 159 in file main.s
   Uses
      At line 78 in file main.s
Comment: Heartbeat_Init used once
SendDataToLogicAnalyzer 00000196

Symbol: SendDataToLogicAnalyzer
   Definitions
      At line 297 in file main.s
   Uses
      At line 72 in file main.s
Comment: SendDataToLogicAnalyzer used once
Start 00000004

Symbol: Start
   Definitions
      At line 69 in file main.s
   Uses
      At line 67 in file main.s
Comment: Start used once
Stepper 00000000

Symbol: Stepper



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 66 in file main.s
   Uses
      At line 190 in file main.s
Comment: Stepper used once
Stepper_Init 0000005E

Symbol: Stepper_Init
   Definitions
      At line 111 in file main.s
   Uses
      At line 76 in file main.s
Comment: Stepper_Init used once
Stepper_Step 000000DA

Symbol: Stepper_Step
   Definitions
      At line 181 in file main.s
   Uses
      At line 106 in file main.s
Comment: Stepper_Step used once
Switch_Init 00000092

Symbol: Switch_Init
   Definitions
      At line 138 in file main.s
   Uses
      At line 77 in file main.s
Comment: Switch_Init used once
TimeInitLoop 0000011C

Symbol: TimeInitLoop
   Definitions
      At line 216 in file main.s
   Uses
      At line 220 in file main.s
Comment: TimeInitLoop used once
Wait 000000FA

Symbol: Wait
   Definitions
      At line 197 in file main.s
   Uses
      At line 108 in file main.s
      At line 199 in file main.s

leave 00000194

Symbol: leave
   Definitions
      At line 289 in file main.s
   Uses
      At line 246 in file main.s
Comment: leave used once
loop 00000024

Symbol: loop
   Definitions
      At line 84 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 109 in file main.s
Comment: loop used once
no 00000050

Symbol: no
   Definitions
      At line 105 in file main.s
   Uses
      At line 94 in file main.s
      At line 96 in file main.s

ok 0000004E

Symbol: ok
   Definitions
      At line 104 in file main.s
   Uses
      At line 102 in file main.s
Comment: ok used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 90 in file main.s
      At line 271 in file main.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 152 in file main.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 147 in file main.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 192 in file main.s
      At line 272 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 131 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 126 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 172 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 167 in file main.s
Comment: GPIO_PORTF_DIR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 251 in file main.s
Comment: NVIC_ST_CURRENT_R used once
PA4 40004040

Symbol: PA4
   Definitions
      At line 294 in file main.s
   Uses
      At line 298 in file main.s
Comment: PA4 used once
PE30 4002403C

Symbol: PE30
   Definitions
      At line 295 in file main.s
   Uses
      At line 300 in file main.s
Comment: PE30 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 119 in file main.s
      At line 140 in file main.s
      At line 160 in file main.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 296 in file main.s
   Uses
      At line 304 in file main.s
Comment: UART0_DR_R used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 62 in file main.s
   Uses
      At line 229 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 74 in file main.s
Comment: TExaS_Init used once
2 symbols
377 symbols in table
